<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button_Back.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btn_TenLaptop.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ATiS+SpQl29VAAAAAElFTkSuQmCC
</value>
  </data>
</root>