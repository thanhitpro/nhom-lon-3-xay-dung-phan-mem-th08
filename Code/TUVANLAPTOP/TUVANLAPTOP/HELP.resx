<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button_OK_Help.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>